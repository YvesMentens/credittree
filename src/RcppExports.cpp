// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// ROCconvexhull
List ROCconvexhull(NumericVector scores, IntegerVector classes);
RcppExport SEXP _credittree_ROCconvexhull(SEXP scoresSEXP, SEXP classesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type scores(scoresSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type classes(classesSEXP);
    rcpp_result_gen = Rcpp::wrap(ROCconvexhull(scores, classes));
    return rcpp_result_gen;
END_RCPP
}
// EmpCreditScoringCpp
double EmpCreditScoringCpp(NumericVector scores, IntegerVector classes, double p0, double p1, double ROI);
RcppExport SEXP _credittree_EmpCreditScoringCpp(SEXP scoresSEXP, SEXP classesSEXP, SEXP p0SEXP, SEXP p1SEXP, SEXP ROISEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type scores(scoresSEXP);
    Rcpp::traits::input_parameter< IntegerVector >::type classes(classesSEXP);
    Rcpp::traits::input_parameter< double >::type p0(p0SEXP);
    Rcpp::traits::input_parameter< double >::type p1(p1SEXP);
    Rcpp::traits::input_parameter< double >::type ROI(ROISEXP);
    rcpp_result_gen = Rcpp::wrap(EmpCreditScoringCpp(scores, classes, p0, p1, ROI));
    return rcpp_result_gen;
END_RCPP
}
